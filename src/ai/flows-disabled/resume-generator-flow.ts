// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview A flow to generate a professional resume from user details.
 *
 * - generateResume - A function that handles the resume generation process.
 * - ResumeGeneratorInput - The input type for the generateResume function.
 * - ResumeGeneratorOutput - The return type for the generateResume function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const ExperienceSchema = z.object({
  title: z.string().describe('Job title'),
  company: z.string().describe('Company name'),
  dates: z.string().describe('Employment dates (e.g., "May 2020 - Present")'),
  description: z.string().describe('Key responsibilities and achievements'),
});

const EducationSchema = z.object({
  school: z.string().describe('School or university name'),
  degree: z.string().describe('Degree or certification obtained'),
  dates: z.string().describe('Dates of attendance (e.g., "Aug 2016 - May 2020")'),
});

const ResumeGeneratorInputSchema = z.object({
  name: z.string().describe('Full name of the person.'),
  email: z.string().describe('Email address.'),
  phone: z.string().describe('Phone number.'),
  linkedin: z.string().optional().describe('LinkedIn profile URL.'),
  portfolio: z.string().optional().describe('Portfolio or personal website URL.'),
  summary: z.string().describe('A brief professional summary.'),
  experiences: z.array(ExperienceSchema).describe('A list of professional experiences.'),
  education: z.array(EducationSchema).describe('A list of educational qualifications.'),
  skills: z.array(z.string()).describe('A list of relevant skills.'),
});
export type ResumeGeneratorInput = z.infer<typeof ResumeGeneratorInputSchema>;

const ResumeGeneratorOutputSchema = z.object({
  resumeContent: z.string().describe('The generated resume content in clean, professional Markdown format.'),
});
export type ResumeGeneratorOutput = z.infer<typeof ResumeGeneratorOutputSchema>;

export async function generateResume(input: ResumeGeneratorInput): Promise<ResumeGeneratorOutput> {
  return resumeGeneratorFlow(input);
}

const resumeGeneratorPrompt = ai.definePrompt({
  name: 'resumeGeneratorPrompt',
  input: {schema: ResumeGeneratorInputSchema},
  output: {schema: ResumeGeneratorOutputSchema},
  prompt: `You are an expert resume writer. Create a professional, modern, and ATS-friendly resume based on the following details. Format the entire output as a single, clean Markdown string. Do not include any introductory text, just the Markdown resume content.

  **Resume Details:**

  **Contact Information:**
  *   **Name:** {{name}}
  *   **Email:** {{email}}
  *   **Phone:** {{phone}}
  {{#if linkedin}}*   **LinkedIn:** {{linkedin}}{{/if}}
  {{#if portfolio}}*   **Portfolio:** {{portfolio}}{{/if}}

  **Professional Summary:**
  {{summary}}

  **Experience:**
  {{#each experiences}}
  *   **{{title}}** at {{company}} ({{dates}})
      *   {{description}}
  {{/each}}

  **Education:**
  {{#each education}}
  *   **{{school}}** - {{degree}} ({{dates}})
  {{/each}}

  **Skills:**
  *   {{#each skills}}{{{this}}}{{#unless @last}}, {{/unless}}{{/each}}

  Generate the resume in Markdown format.
  `,
});

const resumeGeneratorFlow = ai.defineFlow(
  {
    name: 'resumeGeneratorFlow',
    inputSchema: ResumeGeneratorInputSchema,
    outputSchema: ResumeGeneratorOutputSchema,
  },
  async input => {
    const {output} = await resumeGeneratorPrompt(input);
    return output!;
  }
);
