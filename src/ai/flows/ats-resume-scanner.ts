// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview A flow to scan a resume and provide an ATS score with improvement suggestions.
 *
 * - atsResumeScanner - A function that handles the resume scanning process.
 * - AtsResumeScannerInput - The input type for the atsResumeScanner function.
 * - AtsResumeScannerOutput - The return type for the atsResumeScanner function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const AtsResumeScannerInputSchema = z.object({
  resumeDataUri: z
    .string()
    .describe(
      "The resume file, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'."
    ),
});
export type AtsResumeScannerInput = z.infer<typeof AtsResumeScannerInputSchema>;

const AtsResumeScannerOutputSchema = z.object({
  atsScore: z.number().describe('The ATS score of the resume (0-100).'),
  suggestions: z.array(z.string()).describe('Specific suggestions for improving the resume.'),
  summary: z.string().describe('A summary of the resume analysis.'),
});
export type AtsResumeScannerOutput = z.infer<typeof AtsResumeScannerOutputSchema>;

export async function atsResumeScanner(input: AtsResumeScannerInput): Promise<AtsResumeScannerOutput> {
  return atsResumeScannerFlow(input);
}

const atsResumeScannerPrompt = ai.definePrompt({
  name: 'atsResumeScannerPrompt',
  input: {schema: AtsResumeScannerInputSchema},
  output: {schema: AtsResumeScannerOutputSchema},
  prompt: `You are an expert resume analyst specializing in Applicant Tracking Systems (ATS). You will analyze the resume provided and provide an ATS score (0-100), specific suggestions for improvement, and a summary of the analysis. Make sure to set the atsScore field to the score determined.

  Resume:
  {{media url=resumeDataUri}}

  Respond in a structured JSON format.
  `,
});

const atsResumeScannerFlow = ai.defineFlow(
  {
    name: 'atsResumeScannerFlow',
    inputSchema: AtsResumeScannerInputSchema,
    outputSchema: AtsResumeScannerOutputSchema,
  },
  async input => {
    const {output} = await atsResumeScannerPrompt(input);
    return output!;
  }
);
